<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Matrix</title>
    <link>https://sineatos.github.io/tags/golang/</link>
    <description>Recent content in Golang on Matrix</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 31 May 2018 21:53:14 +0800</lastBuildDate>
    
	<atom:link href="https://sineatos.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang中interface的内存布局</title>
      <link>https://sineatos.github.io/tools/programme-language/golang/implement/interface-memory-layout/</link>
      <pubDate>Thu, 31 May 2018 21:53:14 +0800</pubDate>
      
      <guid>https://sineatos.github.io/tools/programme-language/golang/implement/interface-memory-layout/</guid>
      <description>1. 内存布局 了解interface的内存结构是非常有必要的，只有了解了这一点，我们才能进一步分析诸如类型断言等情况的效率问题。先看一个例子： type</description>
    </item>
    
  </channel>
</rss>